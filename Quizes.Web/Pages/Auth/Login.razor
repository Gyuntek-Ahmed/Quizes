@page "/auth/login"

@layout EmptyLayout
@inject IAuthApi AuthApi
@inject NavigationManager NavigationManager
@inject QuizAuthStateProvider QuizAuthStateProvider

<div class="container">
    <div class="row vh-100">
        <div class="col-sm-4 mx-auto my-auto border shadow-lg">

            <div class="mt-3">
                <h1 class="text-center">Вход в системата</h1>
            </div>

            <AuthorizeView>
                <Authorizing>
                    <p>Зареждане...</p>
                </Authorizing>

                <Authorized>
                    <p>Вие сте влезли в системата: @context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value</p>
                </Authorized>

                <NotAuthorized>
                    <p>Вие не сте влезли в системата.</p>
                </NotAuthorized>
            </AuthorizeView>
            <hr />

            <EditForm Model="_model" OnValidSubmit="LoginAsync">
                <DataAnnotationsValidator />

                <div class="mb-3">
                    <label class="form-label">Потребителско име: </label>
                    <InputText class="form-control" @bind-Value="_model.Username" />
                    <ValidationMessage For="() => _model.Username" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Парола: </label>
                    <InputText type="password" class="form-control" @bind-Value="_model.Password" />
                    <ValidationMessage For="() => _model.Password" />
                </div>

                @if (!string.IsNullOrEmpty(_error))
                {
                    <div class="alert alert-danger">
                        <strong>Грешка: </strong> @_error
                    </div>
                }
                <div class="mb-3">
                    @if (!_isBusy)
                    {
                        <button type="submit" class="btn btn-success">Вход</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-secondary">Влязъл...</button>
                    }
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginDto _model = new();
    private bool _isBusy;
    private string? _error;

    private async Task LoginAsync()
    {
        _error = string.Empty;
        _isBusy = true;

        try
        {
            var authResponse = await AuthApi.LoginAsync(_model);

            if (authResponse.HasError)
            {
                _error = "Невалидно потребителско име или парола.";
                return;
            }

            var loggedInUser = authResponse.User;
            await QuizAuthStateProvider.SetLoginAsync(loggedInUser);

            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _isBusy = false;
        }

    }
}
