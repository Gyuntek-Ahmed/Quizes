@page "/admin/manage-quizes"

@using Quizes.Shared.Components.Components

@inject IQuizApi QuizApi
@inject ICategoryApi CategoryApi

<div class="container">
    <h1>Управление на тестове</h1>
    <hr />
    <div class="row">
        <div class="col-sm-3 ms-auto">
            <label class="form-label">Изберете Категория</label>
            <select class="form-select" @bind="_selectedCategory" @bind:after="OnSelectedCategoryChanged">
                <option value="0">Всички</option>
                @foreach (var category in _categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
    </div>
    <div class="row">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Име</th>
                    <th>Категория</th>
                    <th>Брой Въпроси</th>
                    <th>Време (В Минути)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (_filteredQuizes.Length == 0)
                {
                    <tr>
                        <td colspan="5">
                            <p class="text-danger">Няма намерени тестове.</p>
                        </td>
                    </tr>
                }
                else
                {
                    foreach (var q in _filteredQuizes)
                    {
                        <tr>
                            <td>@q.Name</td>
                            <td>@q.CategoryName</td>
                            <td>@q.TotalQuestions въпроса</td>
                            <td>@q.TimeInMinutes минути</td>
                            <td>
                                <div class="d-flex justify-content-around">
                                    <button type="button" class="btn btn-sm btn-info" @onclick="() => ViewQuestionsAsync(q)">Виж Въпросите</button>
                                    <button type="button" class="btn btn-sm btn-primary">Редактиране</button>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@if (_showQuestionsModal)
{
    <Modal Title="Въпроси"
           ActionBtnText="Ok"
           Size="ModalSize.Large"
           OnActionButtonClick="() => _showQuestionsModal = false"
           OnCancelButtonClick="() => _showQuestionsModal = false">
        @foreach (var q in _viewingQuestions)
        {
            <div class="mb-3 shadow p-2">
                @q.Text
            </div>
        }
    </Modal>
}

@code {
    private QuizListDto[] _quizes = [];
    private QuizListDto[] _filteredQuizes = [];
    private CategoryDto[] _categories = [];
    private int _selectedCategory;

    private QuestionDto[] _viewingQuestions = [];
    private bool _showQuestionsModal = false;

    protected override async Task OnInitializedAsync()
    {
        var quizesTask = QuizApi.GetQuizesAsync();
        _categories = await CategoryApi.GetCategoriesAsync();
        _quizes = await quizesTask;
        _filteredQuizes = _quizes;
    }

    private void OnSelectedCategoryChanged()
    {
        if (_selectedCategory == 0)
            _filteredQuizes = _quizes;
        else
            _filteredQuizes = _quizes.Where(q => q.CategoryId == _selectedCategory).ToArray();
    }

    private async Task ViewQuestionsAsync(QuizListDto q)
    {
        _viewingQuestions = await QuizApi.GetQuizQuestionsAsync(q.Id);
        _showQuestionsModal = true;
    }
}